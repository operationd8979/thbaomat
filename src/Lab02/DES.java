/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Lab02;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.Cipher;
import javax.crypto.CipherInputStream;
import javax.crypto.CipherOutputStream;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.DESKeySpec;
import javax.swing.JOptionPane;

/**
 *
 * @author ESC
 */
public class DES extends javax.swing.JFrame {

    /**
     * Creates new form DES
     */
    
    private int mode;
    private static void doCopy(InputStream is, OutputStream os)throws IOException{
        byte[] bytes = new byte[64];
        int numBytes;
        while((numBytes = is.read(bytes))!=-1){
            os.write(bytes,0,numBytes);
        }
        os.flush();
        os.close();
        is.close();
    }
    
    public static void encrypt(String key, InputStream is,OutputStream os)throws Throwable{
        encryptOrDecrypt(key,Cipher.ENCRYPT_MODE,is,os);
    }
    
    public static void decrypt(String key, InputStream is,OutputStream os)throws Throwable{
        encryptOrDecrypt(key,Cipher.DECRYPT_MODE,is,os);
    }
    
    public static void encryptOrDecrypt(String key, int mode,InputStream is,OutputStream os) throws Throwable{
        DESKeySpec dks = new DESKeySpec(key.getBytes());
        SecretKeyFactory skf = SecretKeyFactory.getInstance("DES");
        SecretKey desKey = skf.generateSecret(dks);
        Cipher cipher = Cipher.getInstance("DES");
        
        if(mode == Cipher.ENCRYPT_MODE){
            cipher.init(Cipher.ENCRYPT_MODE,desKey);
            CipherInputStream cis = new CipherInputStream(is,cipher);
            doCopy(cis,os);
        }
        else if(mode == Cipher.DECRYPT_MODE){
            cipher.init(Cipher.DECRYPT_MODE, desKey);
            CipherOutputStream cos = new CipherOutputStream(os,cipher);
            doCopy(is,cos);
        }
    }
    
    public DES() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtKey = new javax.swing.JTextField();
        btnEn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCipher = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtPlain = new javax.swing.JTextArea();
        btnDis = new javax.swing.JButton();
        btnWr = new javax.swing.JButton();
        btnDe = new javax.swing.JButton();
        btnOp = new javax.swing.JButton();

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("DES");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Input Key:");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Plain text:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Cipher text:");

        btnEn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnEn.setText("<Encypt>");
        btnEn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnActionPerformed(evt);
            }
        });

        txtCipher.setColumns(20);
        txtCipher.setRows(5);
        jScrollPane1.setViewportView(txtCipher);

        txtPlain.setColumns(20);
        txtPlain.setRows(5);
        jScrollPane3.setViewportView(txtPlain);

        btnDis.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnDis.setText("<Display>");
        btnDis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisActionPerformed(evt);
            }
        });

        btnWr.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnWr.setText("<Write File>");
        btnWr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWrActionPerformed(evt);
            }
        });

        btnDe.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnDe.setText("<Decypt>");
        btnDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeActionPerformed(evt);
            }
        });

        btnOp.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnOp.setText("<Open File>");
        btnOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(154, 154, 154))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnDe)
                                        .addGap(41, 41, 41)
                                        .addComponent(btnOp))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(286, 286, 286)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane3))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnEn)
                                .addGap(39, 39, 39)
                                .addComponent(btnDis)
                                .addGap(41, 41, 41)
                                .addComponent(btnWr))
                            .addComponent(txtKey, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEn)
                            .addComponent(btnDis)
                            .addComponent(btnWr))))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDe)
                    .addComponent(btnOp))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnActionPerformed
        try{
            String key = txtKey.getText();
            FileInputStream fis = new FileInputStream("C:\\Users\\ESC\\Desktop\\ThucHanh Bao Mat\\Lab02\\Des.txt");
            FileOutputStream fos = new FileOutputStream("C:\\Users\\ESC\\Desktop\\ThucHanh Bao Mat\\Lab02\\EnDes.txt");
            encrypt(key,fis,fos);
            JOptionPane.showMessageDialog(null,"Encypting successfully!");
        }catch(Throwable e){
            e.printStackTrace();
        }       
    }//GEN-LAST:event_btnEnActionPerformed

    private void btnDisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisActionPerformed
        try{
            BufferedReader br = null;
            String fileName = "C:\\Users\\ESC\\Desktop\\ThucHanh Bao Mat\\Lab02\\EnDes.txt";
            br = new BufferedReader(new FileReader(fileName));
            StringBuffer sb = new StringBuffer();
            char[] ca = new char[5];
            while(br.ready()){
                int len = br.read(ca);
                sb.append(ca,0,len);
            }
            br.close();
            System.out.println("Dữ liệu là: "+sb);
            String chuoi = sb.toString();
            txtCipher.setText(chuoi);
        }catch(IOException ex){
            Logger.getLogger(DES.class.getName()).log(Level.SEVERE,null,ex);
        }
    }//GEN-LAST:event_btnDisActionPerformed

    private void btnWrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWrActionPerformed
        try{
            BufferedWriter bw = null;
            String fileName = "C:\\Users\\ESC\\Desktop\\ThucHanh Bao Mat\\Lab02\\Des.txt";
            String s = txtPlain.getText();
            bw = new BufferedWriter(new FileWriter(fileName));
            bw.write(s);
            bw.close();
            JOptionPane.showMessageDialog(null, "Successfully writing file!");
        }catch(IOException ex){
            Logger.getLogger(DES.class.getName()).log(Level.SEVERE,null,ex);
        }
    }//GEN-LAST:event_btnWrActionPerformed

    private void btnDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeActionPerformed
        FileInputStream fis2 = null;
        try{
            String key = txtKey.getText();
            fis2 = new FileInputStream("C:\\Users\\ESC\\Desktop\\ThucHanh Bao Mat\\Lab02\\EnDes.txt");
            FileOutputStream fos2 = new FileOutputStream("C:\\Users\\ESC\\Desktop\\ThucHanh Bao Mat\\Lab02\\Decrypted.txt");
            decrypt(key,fis2,fos2);
            BufferedReader br = null;
            br = new BufferedReader(new FileReader("C:\\Users\\ESC\\Desktop\\ThucHanh Bao Mat\\Lab02\\Decrypted.txt"));
            StringBuffer sb = new StringBuffer();
            char[] ca = new char[5];
            while(br.ready()){
                int len = br.read(ca);
                sb.append(ca,0,len);
            }
            br.close();
            System.out.println("Du lieu la: "+ sb);
            String chuoi = sb.toString();
            txtCipher.setText(chuoi);  
            
        }catch(Throwable ex){
            Logger.getLogger(DES.class.getName()).log(Level.SEVERE,null,ex);
        }finally{
            try{
                fis2.close();
            }catch(IOException ex){
                Logger.getLogger(DES.class.getName()).log(Level.SEVERE,null,ex);
            }
        }
    }//GEN-LAST:event_btnDeActionPerformed

    private void btnOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpActionPerformed
        try{
            BufferedReader br = null;
            String fileName = "C:\\Users\\ESC\\Desktop\\ThucHanh Bao Mat\\Lab02\\EnDes.txt";
            br = new BufferedReader(new FileReader(fileName));
            StringBuffer sb = new StringBuffer();
            JOptionPane.showMessageDialog(null, "Successfully openning file!");
            char[] ca = new char[5];
            while(br.ready()){
                int len = br.read(ca);
                sb.append(ca,0,len);
            }
            br.close();
            System.out.println("Dữ liệu là: "+sb);
            String chuoi = sb.toString();
            txtPlain.setText(chuoi);
            txtCipher.setText("");
        }catch(IOException ex){
            Logger.getLogger(DES.class.getName()).log(Level.SEVERE,null,ex);
        }
    }//GEN-LAST:event_btnOpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DES().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDe;
    private javax.swing.JButton btnDis;
    private javax.swing.JButton btnEn;
    private javax.swing.JButton btnOp;
    private javax.swing.JButton btnWr;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea txtCipher;
    private javax.swing.JTextField txtKey;
    private javax.swing.JTextArea txtPlain;
    // End of variables declaration//GEN-END:variables
}
